version: 2.1

orbs:
  barkendeploy: navikt/barkendeploy@dev:master

executors:
  openjdk:
    docker:
      - image: "circleci/openjdk:11"

parameters:
  deploy_branch:
    type: boolean
    default: false

commands:
  create-deployment:
    parameters:
      cluster:
        type: string
      application_name:
        type: string
        default: ${CIRCLE_PROJECT_REPONAME}
      team:
        type: string
        default: integrasjon
      version:
        type: string
        default: ${IMAGE_VERSION}
      template_path:
        type: string
        default: .nais/naiserator.yaml
      config_path:
        type: string
    steps:
      - run:
          command: |
            source $BASH_ENV
            deployment-cli deploy create --cluster=<<parameters.cluster>> --team=<<parameters.team>> --vars=<<parameters.config_path>> --resource=<<parameters.template_path>> --var version=<<parameters.version>> --var application_name=<<parameters.application_name>> --repository=$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME
jobs:
  test:
    executor: openjdk
    steps:
      - checkout
      - barkendeploy/gradle-cache-restore
      - run:
          name: Run tests
          command: ./gradlew clean test
      - barkendeploy/junit-test-results-store
      - barkendeploy/gradle-cache-persist
  build-and-push-docker:
    executor: openjdk
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - barkendeploy/init:
          version_format: $(TZ=Europe/Oslo date +'%Y-%m-%d-%H%M')-${CIRCLE_SHA1}
      - barkendeploy/gradle-cache-restore
      - run:
          name: Run tests and build JAR
          command: ./gradlew clean build shadowJar
      - barkendeploy/junit-test-results-store
      - barkendeploy/gradle-cache-persist
      - barkendeploy/docker-build
      - barkendeploy/docker-login
      - barkendeploy/docker-push
workflows:
  version: 2
  run-tests-only:
    unless: << pipeline.parameters.deploy_branch >>
    jobs:
      - test:
          filters:
            branches:
              ignore: master
  build-and-deploy-master:
    jobs:
      - build-and-push-docker:
          filters:
            branches:
              only: master
      - barkendeploy/deployment:
          requires:
            - build-and-push-docker
          deployments:
            - checkout
            - create-deployment:
                cluster: dev-fss
                config_path: .nais/config-dev.json
            #- deploy:
            #    cluster: prod-fss
            #    config_path: .nais/config-prod.json
  build-and-deploy-branch:
    when: << pipeline.parameters.deploy_branch >>
    jobs:
      - build-and-push-docker:
          filters:
            branches:
              ignore: master
      - barkendeploy/deployment:
          requires:
            - build-and-push-docker
          deployments:
            - checkout
            - create-deployment:
                cluster: dev-fss
                config_path: .nais/config-dev.json
