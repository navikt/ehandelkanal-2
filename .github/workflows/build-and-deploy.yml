name: Build, push, and deploy

on: [push, pull_request, workflow_dispatch]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  id-token: write
  actions: read

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '11'
          cache: gradle
      - name: Build and run tests
        run: ./gradlew --warning-mode all clean build

  build:
    name: Build and push image (NAIS)
    needs: test
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      actions: read
    outputs:
      image: ${{ steps.docker.outputs.image }}
      telemetry: ${{ steps.docker.outputs.telemetry }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '11'
          cache: gradle
      - name: Build JAR (skip tests)
        run: ./gradlew clean build shadowJar -x test
      - name: Build & push (to NAIS registry)
        id: docker
        uses: nais/docker-build-push@v0
        with:
          team: team-oebs
          cache_from: type=gha
          cache_to: type=gha,mode=max

  deploy-dev:
    name: Deploy to NAIS dev
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: dev-fss
          RESOURCE: .nais/naiserator.yaml
          VARS: .nais/config-dev.yaml
          WORKLOAD_IMAGE: ${{ needs.build.outputs.image }}
          TELEMETRY: ${{ needs.build.outputs.telemetry }}

  deploy-prod:
    name: Deploy to NAIS prod
    needs: [build, deploy-dev]
    if: github.ref_name == 'master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: prod-fss
          RESOURCE: .nais/naiserator.yaml
          VARS: .nais/config-prod.yaml
          WORKLOAD_IMAGE: ${{ needs.build.outputs.image }}
          TELEMETRY: ${{ needs.build.outputs.telemetry }}
